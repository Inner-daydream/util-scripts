#!/bin/bash

# this script wraps arround sshutle to allow for easy vpn connections

set -e
# check if run as root
if [ "$EUID" -ne  0 ]; then
    echo "Please run as root, this is required to modify the routing table and to remove the pid file"
    exit
fi

usage() {
    echo "Usage: $0 [-l log_path] [-u ssh_user] [-s ssh_server] [-n vpn_subnet] [-p ssh_port] [-d sshuttle_dir] up|down" 1>&2
    exit 1
}

if [ $# -eq 0 ]; then
    usage
fi

if ! command -v sshuttle &> /dev/null
then
    echo "sshuttle could not be found, please install it"
    exit
fi

while getopts ":l:u:s:n:p:d:" opt; do
  case $opt in
    l) log_path="$OPTARG"
    ;;
    u) ssh_user="$OPTARG"
    ;;
    s) ssh_server="$OPTARG"
    ;;
    n) vpn_subnet="$OPTARG"
    ;;
    p) ssh_port="$OPTARG"
    ;;
    d) sshuttle_dir="$OPTARG"
    ;;



    \?) echo "Invalid option -$OPTARG" >&2; usage
    ;;
  esac
done
shift $((OPTIND -1))
action=$1

if [ -z "$action" ]; then
    echo "Please provide an action up or down"
    usage
fi
if [ -z "$ssh_port" ]; then
    ssh_port=222
fi

sshuttle_dir="${SSHUTTLE_DIR:-$HOME/.ssh-vpn}" 

if [ "$action" == "up" ]; then

    if [ -f "$sshuttle_dir/pid" ]; then
        pid=$(cat "$sshuttle_dir/pid")
        if ps -p "$pid" > /dev/null; then
            echo "A vpn connection is already running with pid $pid"
            exit
        else 
            rm "$sshuttle_dir/pid"
        fi
    fi

    if [ -z "$ssh_user" ]; then
        echo "Please provide a ssh user with -u"
        usage
    fi

    if [ -z "$ssh_server" ]; then
        echo "Please provide a ssh server with -s"
        usage
    fi

    if [ -z "$vpn_subnet" ]; then
        vpn_subnet="0.0.0.0/0"
    fi
   
    if [ -z "$log_path" ]; then
        log_path="$sshuttle_dir/conn.log"
    fi

    mkdir -p "$sshuttle_dir"
    nohup sshuttle  -e "ssh -o StrictHostKeyChecking=accept-new" -r "$ssh_user@$ssh_server:$ssh_port" "$vpn_subnet" &> "$log_path" &
    pid=$!
    if [ -z "$pid" ]; then
        echo "Failed to start vpn connection"
        exit
    fi
    echo "$pid" > "$sshuttle_dir/pid"

elif [ "$action" == "down" ]; then
    [ -f "$sshuttle_dir/pid" ] || (echo "No vpn connection found" && exit)
    pid=$(cat "$sshuttle_dir/pid")
    kill "$pid" || (echo "Failed to kill vpn connection with pid $pid, the connection might have hanged" && exit)
    rm "$sshuttle_dir/pid"
    echo "Killed vpn connection with pid $pid"
else
    echo "Invalid action, please use up or down"
fi
